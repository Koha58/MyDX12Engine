#pragma once
#include <DirectXMath.h>

// ============================================================================
// SceneConstantBuffer
//  - シーン全体で使用する定数データを格納する構造体。
//  - GPU (HLSL シェーダー側の cbufffer) と 1:1 対応させるため、
//    サイズやメンバの並びは 16バイト境界に揃える必要がある。
// ============================================================================
struct SceneConstantBuffer
{
    DirectX::XMFLOAT4X4 mvp;      // 64バイト
    // Model-View-Projection 行列
    // ・ローカル座標 → ワールド → ビュー → プロジェクション変換をまとめた行列
    // ・頂点シェーダーで頂点をクリップ空間に変換するのに使用

    DirectX::XMFLOAT4X4 world;    // 64バイト (累計 128)
    // ワールド行列
    // ・ローカル座標 → ワールド座標への変換
    // ・ワールド空間での位置/回転/スケールを表す

    DirectX::XMFLOAT4X4 worldIT;  // 64バイト (累計 192)
    // ワールド行列の逆転置 (Inverse Transpose)
    // ・法線ベクトルを正しくワールド空間へ変換するために使用
    // ・行列がスケーリングを含む場合でも正しい方向を保持する

    DirectX::XMFLOAT3   lightDir; // 12バイト (累計 204)
    // ワールド空間でのライトの方向ベクトル
    // ・例: (0, -1, -1) なら「斜め下から光が当たる」

    float pad;                    // 4バイト (累計 208)
    // 16バイト境界に揃えるためのパディング
    // HLSL の cbuffer は 16 バイト単位で配置されるため必須
};
