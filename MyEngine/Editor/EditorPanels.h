#pragma once
#include <memory>
#include "imgui.h"  // ImTextureID / ImVec2 を使うため（ImGui の基本型）

// 前方宣言（ここでは型名だけ分かれば十分。重いヘッダ依存を避けてビルド時間短縮）
class Scene;
class GameObject;

namespace EditorPanels
{
    // =========================================================================
    // GONameUTF8
    // -------------------------------------------------------------------------
    // ・GameObject の表示名（UTF-8）を返すユーティリティ。
    // ・ImGui 側は基本 UTF-8 想定のため、エディタ表示で直接使える形にしておく。
    // ・go==nullptr の場合は "(null)" などのプレースホルダを返す実装を想定。
    // =========================================================================
    const char* GONameUTF8(const GameObject* go);

    // =========================================================================
    // DrawHierarchy
    // -------------------------------------------------------------------------
    // ・シーンのツリー（親子階層）をツリービューで描画する。
    // ・ノードクリックによって選択対象（selected）を更新する。
    // ・selected は外部でも保持されるため std::weak_ptr で受け渡し。
    //   （選択対象が破棄された場合に自動で無効化される利点）
    //
    // @param scene    : 描画対象のシーン（ルート配下を列挙してツリー化）
    // @param selected : 現在の選択を保持/更新するハンドル（弱参照）
    // =========================================================================
    void DrawHierarchy(Scene* scene, std::weak_ptr<GameObject>& selected);

    // =========================================================================
    // DrawInspector
    // -------------------------------------------------------------------------
    // ・選択中 GameObject の詳細（インスペクタ）を描画する。
    // ・当面は Transform のみ（Position/Rotation/Scale）を編集可能にする実装を想定。
    // ・selected が無効/切断されていれば「No selection」表示。
    //
    // @param selected : 対象 GameObject（弱参照、無効化時はUI側でガード）
    // =========================================================================
    void DrawInspector(const std::weak_ptr<GameObject>& selected);

    // =========================================================================
    // DrawViewportTextureNoEdge
    // -------------------------------------------------------------------------
    // ・オフスクリーン RT を「枠なし・にじみ抑制」で ImGui に貼るためのヘルパ。
    // ・半テクセル分の UV オフセット（0.5/Width, 0.5/Height）を入れて
    //   サンプリング境界のにじみを軽減。
    // ・wantSize はウィンドウ/領域に合わせて呼び出し側で計算した希望サイズ。
    //
    // @param tex     : ImGui に渡すテクスチャID（外部SRVヒープ等で作成したもの）
    // @param texW    : テクスチャ幅（ピクセル）
    // @param texH    : テクスチャ高さ（ピクセル）
    // @param wantSize: 表示したいサイズ（ピクセル、ImVec2）
    // =========================================================================
    void DrawViewportTextureNoEdge(ImTextureID tex, int texW, int texH, ImVec2 wantSize);
}
